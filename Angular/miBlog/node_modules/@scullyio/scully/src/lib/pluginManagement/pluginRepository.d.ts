import { ConfigValidator, PluginFuncs, Plugins, RegisterOptions } from './Plugin.interfaces';
export declare const configValidator: unique symbol;
export declare const configData = "___Scully_config_for_plugin___";
export declare const AlternateExtensionsForFilePlugin: unique symbol;
export declare const accessPluginDirectly: unique symbol;
export declare const routeProcessPriority: unique symbol;
export declare const scullySystem = "scullySystem";
export declare const plugins: Plugins;
export declare const pluginTypes: readonly ["allDone", "enterprise", "fileHandler", "postProcessByDom", "postProcessByHtml", "render", "routeDiscoveryDone", "routeProcess", "router", "scullySystem"];
/** type helpers for registerPlugin */
export declare const registerPlugin: <T extends "router" | "render" | "postProcessByHtml" | "postProcessByDom" | "fileHandler" | "scullySystem" | "allDone" | "enterprise" | "routeDiscoveryDone" | "routeProcess">(type: T, name: string | symbol, plugin: PluginFuncs[T], pluginOptions?: ConfigValidator | number | string[], { replaceExistingPlugin }?: RegisterOptions) => void;
