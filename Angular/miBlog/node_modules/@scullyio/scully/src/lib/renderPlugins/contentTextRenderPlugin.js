"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contentTextRenderPlugin = void 0;
const pluginRepository_1 = require("../pluginManagement/pluginRepository");
const log_1 = require("../utils/log");
const convertAndInjectContent_1 = require("./content-render-utils/convertAndInjectContent");
pluginRepository_1.registerPlugin('postProcessByDom', 'contentText', contentTextRenderPlugin);
async function contentTextRenderPlugin(dom, route) {
    const contentType = route.contentType || route.config.contentType;
    const contentRaw = route.content || route.config.content;
    if (typeof contentType === 'string' && ['string', 'function'].includes(typeof contentRaw)) {
        try {
            const content = typeof contentRaw === 'string' ? contentRaw : contentRaw(route);
            return convertAndInjectContent_1.convertAndInjectContent(dom, content, contentType, route);
        }
        catch (e) {
            log_1.logError(`Error during contentText rendering`);
            console.error(e);
        }
    }
    else {
        throw new Error(`route "${log_1.yellow(route.route)}" is missing contentType or content`);
    }
    return dom;
}
exports.contentTextRenderPlugin = contentTextRenderPlugin;
//# sourceMappingURL=contentTextRenderPlugin.js.map