export declare const dotFolder: string;
interface DotProps {
    identifier: string;
    allowErrorCollect: boolean;
    pluginFolder: string;
}
export declare type DotPropTypes = keyof DotProps;
/**
 * Read a property from the scully dotfile/settings
 * @param propName
 */
export declare const readDotProperty: <K extends "pluginFolder" | "identifier" | "allowErrorCollect">(propName: K) => DotProps[K];
/**
 * write a property to the scully dotfile/settings
 * @param propName
 * @param value
 */
export declare const writeDotProperty: <K extends "pluginFolder" | "identifier" | "allowErrorCollect">(propName: K, value: DotProps[K]) => void;
export declare const getFingerPrint: () => string;
/**
 * Utility function to ask for user input, takes a string that will be displayed as prompt.
 * returns a promise with tha answer of the user, or undefined if its in CI/ --noPrompt option
 * @param question
 */
export declare const askUser: (question: string) => Promise<string | undefined>;
export {};
