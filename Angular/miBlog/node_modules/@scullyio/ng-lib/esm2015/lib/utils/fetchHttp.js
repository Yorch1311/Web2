/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/fetchHttp.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @template T
 * @param {?} url
 * @param {?=} responseType
 * @return {?}
 */
export function fetchHttp(url, responseType = 'json') {
    return new Promise((/**
     * @param {?} resolve
     * @param {?} reject
     * @return {?}
     */
    (resolve, reject) => {
        /** @type {?} */
        const xhr = new XMLHttpRequest();
        xhr.responseType = responseType;
        xhr.addEventListener('load', (/**
         * @param {?} ev
         * @return {?}
         */
        ev => {
            if (xhr.status !== 200) {
                return reject(xhr);
            }
            resolve(xhr.response);
        }));
        xhr.addEventListener('error', (/**
         * @param {...?} err
         * @return {?}
         */
        (...err) => reject(err)));
        xhr.open('get', url, true);
        xhr.send();
    }));
}
//# sourceMappingURL=fetchHttp.js.map