{"version":3,"file":"scully-lib.module.js","sourceRoot":"/home/runner/work/scully/scully/libs/ng-lib/src/","sources":["lib/scully-lib.module.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAuB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,qBAAqB,EAAmB,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AACnG,OAAO,EAAE,kBAAkB,EAAE,MAAM,oCAAoC,CAAC;AACxE,OAAO,EAAE,mBAAmB,EAAE,MAAM,wCAAwC,CAAC;AAM7E,MAAM,OAAO,eAAe;;;;IAe1B,YAAoB,IAAwB;QAAxB,SAAI,GAAJ,IAAI,CAAoB;IAAG,CAAC;;;;;;;;;;IAPhD,MAAM,CAAC,OAAO,CAAC,SAA0B,qBAAqB;QAC5D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,qBAAqB,EAAE,MAAM,CAAC,CAAC;QAC1D,OAAO;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;SAC9D,CAAC;IACJ,CAAC;;;YAlBF,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,OAAO,EAAE,CAAC,mBAAmB,CAAC;aAC/B;;;;YANQ,kBAAkB;;;;;;;IAsBb,+BAAgC","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ScullyDefaultSettings, ScullyLibConfig, SCULLY_LIB_CONFIG } from './config/scully-config';\nimport { IdleMonitorService } from './idleMonitor/idle-monitor.service';\nimport { ScullyContentModule } from './scully-content/scully-content.module';\n\n@NgModule({\n  imports: [ScullyContentModule],\n  exports: [ScullyContentModule],\n})\nexport class ScullyLibModule {\n  /**\n   * We use a little trick to get a working idle-service.\n   * First, we separate out the component in a separate module to prevent a circulair injection\n   * second we create a constuctor that activates the IdleMonitorService. as that is provided for 'root'\n   * there will be only 1 instance in our app.\n   * We don't need forRoot, as we are not configuring anything in here.\n   */\n  static forRoot(config: ScullyLibConfig = ScullyDefaultSettings): ModuleWithProviders<any> {\n    config = Object.assign({}, ScullyDefaultSettings, config);\n    return {\n      ngModule: ScullyLibModule,\n      providers: [{ provide: SCULLY_LIB_CONFIG, useValue: config }],\n    };\n  }\n  constructor(private idle: IdleMonitorService) {}\n}\n"]}