import { ModuleWithProviders } from '@angular/core';
import { ScullyLibConfig } from './config/scully-config';
import { IdleMonitorService } from './idleMonitor/idle-monitor.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './scully-content/scully-content.module';
export declare class ScullyLibModule {
    private idle;
    /**
     * We use a little trick to get a working idle-service.
     * First, we separate out the component in a separate module to prevent a circulair injection
     * second we create a constuctor that activates the IdleMonitorService. as that is provided for 'root'
     * there will be only 1 instance in our app.
     * We don't need forRoot, as we are not configuring anything in here.
     */
    static forRoot(config?: ScullyLibConfig): ModuleWithProviders<ScullyLibModule>;
    constructor(idle: IdleMonitorService);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScullyLibModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<ScullyLibModule, never, [typeof ɵngcc1.ScullyContentModule], [typeof ɵngcc1.ScullyContentModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<ScullyLibModule>;
}

//# sourceMappingURL=scully-lib.module.d.ts.map