{"version":3,"file":"scully-routes.service.d.ts","sources":["scully-routes.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nexport interface ScullyRoute {\n    route: string;\n    title?: string;\n    slugs?: string[];\n    published?: boolean;\n    slug?: string;\n    sourceFile?: string;\n    lang?: string;\n    [prop: string]: any;\n}\nexport declare class ScullyRoutesService {\n    private router;\n    private refresh;\n    /**\n     * An observable with all routes, published and unpublished alike\n     */\n    allRoutes$: Observable<ScullyRoute[]>;\n    /**\n     * An observable with available routes (all published routes)\n     */\n    available$: Observable<ScullyRoute[]>;\n    /**\n     * an observable with all unpublished routes\n     */\n    unPublished$: Observable<ScullyRoute[]>;\n    /**\n     * An observable with the top-level off all published routes.\n     * (in an urls it would be `http://www.sample.org/__thisPart__/subroutes`)\n     */\n    topLevel$: Observable<ScullyRoute[]>;\n    constructor(router: Router);\n    /**\n     * returns an observable that returns the route information for the\n     * route currently selected. subscribes to route-events to update when needed\n     */\n    getCurrent(): Observable<ScullyRoute>;\n    /**\n     * internal, as routes can have multiple slugs, and so occur multiple times\n     * this util function collapses all slugs back into 1 route.\n     */\n    private cleanDups;\n    /** an utility that will force a reload of the `scully-routes.json` file */\n    reload(): void;\n}\n"]}