{"version":3,"file":"idle-monitor.service.d.ts","sources":["idle-monitor.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ScullyLibConfig } from '../config/scully-config';\nimport { TransferStateService } from '../transfer-state/transfer-state.service';\ndeclare global {\n    interface Window {\n        'ScullyIO-exposed': {\n            manualIdle?: boolean;\n            transferState?: any;\n            [key: string]: any;\n        };\n    }\n}\nexport declare class IdleMonitorService {\n    private zone;\n    private router;\n    private scullyLibConfig;\n    /** store the 'landing' url so we can skip it in idle-check. */\n    private initialUrl;\n    private imState;\n    idle$: import(\"rxjs\").Observable<boolean>;\n    private initApp;\n    private appReady;\n    private appTimeout;\n    constructor(zone: NgZone, router: Router, conf: ScullyLibConfig, tss: TransferStateService);\n    fireManualMyAppReadyEvent(): Promise<boolean>;\n    init(): Promise<boolean>;\n    private zoneIdleCheck;\n    private simpleTimeout;\n    setPupeteerTimeoutValue(milliseconds: number): void;\n    private setState;\n}\nexport declare function dropEndingSlash(str: string): string;\n"]}