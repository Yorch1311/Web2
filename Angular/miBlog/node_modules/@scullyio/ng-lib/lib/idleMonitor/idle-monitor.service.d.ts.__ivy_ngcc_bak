import { NgZone } from '@angular/core';
import { Router } from '@angular/router';
import { ScullyLibConfig } from '../config/scully-config';
import { TransferStateService } from '../transfer-state/transfer-state.service';
declare global {
    interface Window {
        'ScullyIO-exposed': {
            manualIdle?: boolean;
            transferState?: any;
            [key: string]: any;
        };
    }
}
export declare class IdleMonitorService {
    private zone;
    private router;
    private scullyLibConfig;
    /** store the 'landing' url so we can skip it in idle-check. */
    private initialUrl;
    private imState;
    idle$: import("rxjs").Observable<boolean>;
    private initApp;
    private appReady;
    private appTimeout;
    constructor(zone: NgZone, router: Router, conf: ScullyLibConfig, tss: TransferStateService);
    fireManualMyAppReadyEvent(): Promise<boolean>;
    init(): Promise<boolean>;
    private zoneIdleCheck;
    private simpleTimeout;
    setPupeteerTimeoutValue(milliseconds: number): void;
    private setState;
}
export declare function dropEndingSlash(str: string): string;
